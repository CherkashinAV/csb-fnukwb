{"version":3,"sources":["Card/Card.jsx","Pagination/Pagination.jsx","Spinner/Spinner.jsx","App.js","index.js"],"names":["Card","name","img","className","src","alt","Pagination","itemsAmount","itemsPerPage","setCurrentPage","pagesAmount","Math","ceil","buttons","i","push","onClick","Spinner","Loading","App","useState","items","setItems","currentPage","isLoading","setIsLoading","length","Data","slice","map","el","index","image","useEffect","fetch","then","json","data","endInd","startInd","rootElement","document","getElementById","createRoot","render"],"mappings":"2OAEe,SAASA,EAAK,GAAgB,IAAdC,EAAI,EAAJA,KAAMC,EAAG,EAAHA,IACnC,OACE,sBAAKC,UAAU,OAAM,UACnB,qBAAKA,UAAU,MAAK,SAClB,qBAAKC,IAAKF,EAAKG,IAAI,UAErB,6BAAKJ,MAGX,C,MCTe,SAASK,EAAW,GAOjC,IAHE,IAHFC,EAAW,EAAXA,YACAC,EAAY,EAAZA,aACAC,EAAc,EAAdA,eAEMC,EAAcC,KAAKC,KAAKL,EAAcC,GACtCK,EAAU,GAAG,WACVC,GACPD,EAAQE,KACN,wBAAgBC,QAAS,kBAAMP,EAAeK,EAAE,EAAC,SAC9CA,GADUA,GAGb,EALKA,EAAI,EAAGA,EAAIJ,EAAc,EAAGI,IAAM,EAAlCA,GAOT,OAAO,qBAAKX,UAAU,aAAY,SAAEU,GACtC,C,MCfe,SAASI,IACtB,OACE,qBAAKd,UAAU,oBAAmB,SAChC,qBAAKA,UAAU,qBAGrB,C,MCEA,SAASe,IACP,OACE,gCACE,cAACD,EAAO,IAAG,eAIjB,CAEe,SAASE,IACtB,MAA0BC,mBAAS,IAAG,mBAA/BC,EAAK,KAAEC,EAAQ,KACtB,EAAsCF,mBAAS,GAAE,mBAA1CG,EAAW,KAAEd,EAAc,KAClC,EAAkCW,oBAAS,GAAM,mBAA1CI,EAAS,KAAEC,EAAY,KAExBlB,EAAcc,EAAMK,OAE1B,SAASC,IACP,OACE,qCACE,qBAAKxB,UAAU,QAAO,SACnByB,EAAMC,KAAI,SAACC,EAAIC,GACd,OAAO,cAAC/B,EAAI,CAAaE,IAAK4B,EAAGE,MAAO/B,KAAM6B,EAAG7B,MAA/B8B,EACpB,MAEF,cAACzB,EAAU,CACTC,YAAaA,EACbC,aAba,GAcbC,eAAgBA,MAIxB,CAEAwB,qBAAU,WACRR,GAAa,GArCRS,MAuCH,2HAvCcC,MAAK,SAACL,GAAE,OAAKA,EAAGM,MAAM,IA0CnCD,MAAK,SAACE,GACLf,EAASe,EACX,IACCF,MAAK,WACJV,GAAa,EACf,GACJ,GAAG,IAEH,IAAIa,EAlCiB,GAkCOf,EACxBgB,EAAWD,EAnCM,GAoCfV,EAAQP,EAAMO,MAAMW,EAAUD,GAEpC,OAAO,qBAAKnC,UAAU,MAAK,SAAEqB,EAAY,cAACN,EAAO,IAAM,cAACS,EAAI,KAC9D,CC1DA,IAAMa,EAAcC,SAASC,eAAe,QAC/BC,qBAAWH,GAEnBI,OAAO,cAACzB,EAAG,I","file":"static/js/main.8b94261c.chunk.js","sourcesContent":["import \"./card.css\";\r\n\r\nexport default function Card({ name, img }) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"img\">\r\n        <img src={img} alt=\"img\" />\r\n      </div>\r\n      <h1>{name}</h1>\r\n    </div>\r\n  );\r\n}\r\n","import \"./pagination.css\";\r\n\r\nexport default function Pagination({\r\n  itemsAmount,\r\n  itemsPerPage,\r\n  setCurrentPage\r\n}) {\r\n  const pagesAmount = Math.ceil(itemsAmount / itemsPerPage);\r\n  const buttons = [];\r\n  for (let i = 1; i < pagesAmount + 1; i++) {\r\n    buttons.push(\r\n      <button key={i} onClick={() => setCurrentPage(i)}>\r\n        {i}\r\n      </button>\r\n    );\r\n  }\r\n  return <div className=\"pagination\">{buttons}</div>;\r\n}\r\n","import \"./spinner.css\";\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <div className=\"spinner-container\">\r\n      <div className=\"loading-spinner\"></div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\nimport Card from \"./Card/Card\";\nimport Pagination from \"./Pagination/Pagination\";\nimport Spinner from \"./Spinner/Spinner\";\nimport \"./styles.css\";\n\nfunction fetchData(url) {\n  return fetch(url).then((el) => el.json());\n}\n\nfunction Loading() {\n  return (\n    <div>\n      <Spinner />\n      Loading...\n    </div>\n  );\n}\n\nexport default function App() {\n  const [items, setItems] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const itemsPerPage = 10;\n  const itemsAmount = items.length;\n\n  function Data() {\n    return (\n      <>\n        <div className=\"items\">\n          {slice.map((el, index) => {\n            return <Card key={index} img={el.image} name={el.name} />;\n          })}\n        </div>\n        <Pagination\n          itemsAmount={itemsAmount}\n          itemsPerPage={itemsPerPage}\n          setCurrentPage={setCurrentPage}\n        />\n      </>\n    );\n  }\n\n  useEffect(() => {\n    setIsLoading(true);\n    const resp = fetchData(\n      \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=30&page=1&sparkline=false\"\n    );\n    resp\n      .then((data) => {\n        setItems(data);\n      })\n      .then(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  let endInd = itemsPerPage * currentPage;\n  let startInd = endInd - itemsPerPage;\n  const slice = items.slice(startInd, endInd);\n\n  return <div className=\"App\">{isLoading ? <Loading /> : <Data />}</div>;\n}\n","import { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(<App />);\n"],"sourceRoot":""}